#!/bin/bash
# Copyright 2018 Jordon Bedwell. All rights reserved.
# Use of this source code is governed by the MIT license
# that can be found in the LICENSE file.
[[ "$DEBUG" ]] && set -x
set -e

name="$(basename "$PWD")"
rm -rf bins && mkdir -p bins
repo=$(cat go.mod | grep module | sed -e 's/^module[[:space:]]*//')
version=$(go version | awk '{ print $3 }' | sed -e 's/^go//')
docker pull golang:"$version"

docker rm -f "$name" || true
docker run --name="$name" --env=CGO_ENABLE=0 \
  --env=GO111MODULE=on --volume="$PWD/bins:/bins" \
  --workdir="/.go/src/$repo" --detach --interactive \
  --tty golang:"$version" sh

docker exec "$name" mkdir -p "/.go/src/$repo"
docker cp . "$name":"/.go/src/$repo"
if [[ "$1" ]]; then
  docker exec "$name" git reset HEAD --hard
  docker exec "$name" git \
    checkout "$1"
fi

docker exec "$name" env GOOS=linux   GOARCH=amd64 go build -v -ldflags '-s -w' -o "/bins/$name-linux-amd64"
docker exec "$name" env GOOS=darwin  GOARCH=amd64 go build -v -ldflags '-s -w' -o "/bins/$name-darwin-amd64"
docker exec "$name" env GOOS=windows GOARCH=amd64 go build -v -ldflags '-s -w' -o "/bins/$name-windows-amd64"
docker exec "$name" env GOOS=linux   GOARCH=arm64 go build -v -ldflags '-s -w' -o "/bins/$name-linux-arm64"
docker exec "$name" env GOOS=linux   GOARCH=arm   go build -v -ldflags '-s -w' -o "/bins/$name-linux-arm"
docker rm -f "$name"

if [[ "$SIGN" != "false" ]] && [[ "$MACOS_DEVELOPER_ID" ]]; then
  codesign -f -s "$MACOS_DEVELOPER_ID" \
    "bins/$name-darwin"-*
fi
